#
# Author: Pierre Begemotowitsch     <pierre.schnizer@helmholtz-berlin.de>
#         Wahedullah Sulaiman Khail <Wahedullah.Sulaiman_Khail@helmholtz-berlin.de>
#
#
# Container containing the core components of the digital twin
Bootstrap: localimage
From: ../bin/python-container.sif

%files
    snippets/*.sh /build/snippets/
    ../external-repositories/lat2db /build/
    ../external-repositories/dt4acc /build/
    ../external-repositories/p4p /build/

    # predownloaded wheels
    ../wheels/*.whl /build/wheels/
    ../wheels/*.tar.gz /build/wheels/

    # EPICS support
    ../build/epics-utils.tar.gz /build/


%post
    export DEBIAN_FRONTEND=noninteractive
    . /twin/python/venv/bin/activate

    # install epics utils
    cd /build/
    tar -C /twin/ -zxf epics-utils.tar.gz

    #  ---------------------------------------------------------
    # add /twin/lib so that it will be used by ldconfig
    # do not forget to run ldconfig after everything has been
    # installed
    opt_conf_path=/etc/ld.so.conf.d/twin.conf
    cat >$opt_conf_path <<EOF
# parts built during process go here
/twin/lib
/twin/epics/lib
# EOF
EOF

    /usr/sbin/ldconfig

    #  ---------------------------------------------------------
    # installing python packages using conda and pip
    cd /build/

    # install what is missing
    python3 -m pip install fastapi pymongo pydantic typing attrs        \
                 uvicorn httpx numpy>2.0 scipy lark jsons uuid datetime \
		 accelerator-toolbox p4p \
		 -q --find-links file:///build/wheels --no-index

    # installing required packages
    . /build/snippets/bact_package_functions.sh

    echo "adding bact packages"
    install_python_package_from_github bact-device-models
    echo "added bact packages"

    # p4p built locally and installed here
    # most probably yes: numpy 2.0 compatability I guess
    python3 -m pip install -q lat2db/ dt4acc/src/ --find-links file:///build/wheels --no-index

    #  ---------------------------------------------------------
    # trying to reduce container size
    # does not really work
    # find /twin/python/venv/ -name '*.so' | xargs strip
    #  ---------------------------------------------------------

    # ------------------------------------------------------------
    # clean up
    #
    #
    cd /
    pip3 cache list
    # first pip ... can disapper later on
    pip3 cache purge
    rm -fr /build/
    rm -rf /var/lib/apt/lists/*
    rm -rf /.cache
    rm -rf /root/.cache

    CUSTOM_ENV='/.singularity.d/env/99-zz_custom_env.sh'
    cat >$CUSTOM_ENV <<EOF
#!/bin/bash
. /twin/python/venv/bin/activate
PS1='SoftIoc Twin \w > '
export PATH=/twin/python/venv/bin/:/twin/epics/bin/:/bin:/usr/bin/:/usr/local/bin/
EOF

    CUSTOM_BASH='/.singularity_bash'
cat >$CUSTOM_BASH<<EOF
export PATH=/twin/epics/bin:/usr/bin/:/usr/local/bin/
EOF

    chmod 755 "$CUSTOM_ENV"
    chmod 755 "$CUSTOM_BASH"

    echo '# use custom PS1 '                          >> /etc/bash.bashrc
    echo '. /.singularity.d/env/99-zz_custom_env.sh'  >> /etc/bash.bashrc
    echo '# end custom PS1 '                          >> /etc/bash.bashrc

    /usr/sbin/ldconfig
    
%test

   /twin/python/venv/bin/python3 -c "import p4p; print(p4p); import softioc; print(softioc)"
   /twin/python/venv/bin/python3 -c "import numpy; import scipy; import at"
   # /usr/bin/python3 /usr/local/lib/python3.12/dist-packages/dt4acc/setup_configuration/softioc_server.py


%runscript
    # perhaps to be moded to %startscript
    # currently run in an interactive manner

    # todo:
    #     derive prefix in automatic manner
    #     activate venv at start
    /twin/python/venv/bin/python3.12 -m dt4acc.setup_configuration.softioc_server
