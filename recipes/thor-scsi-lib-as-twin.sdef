#
# Author: Markus Ries               <markus.ries@helmholtz-berlin.de>
#         Wahedullah Sulaiman Khail <Wahedullah.Sulaiman_Khail@helmholtz-berlin.de>
#         Pierre Begemotowitsch     <pierre.schnizer@helmholtz-berlin.de>
#         Teresia Olsson            <teresia.olsson@helmholtz-berlin.de>
#
# Container containing the core components of the digital twin

# Bootstrap: docker
# From: ubuntu:22.04

Bootstrap: localimage
From: ../bin/epics7-pydevice.sif

%files
    snippets/bact_packages.sh /build/snippets/
    # guessing where wheels will be searched for
    ../wheels/*.whl /build/wheels/
    ../wheels/*.tar.gz /build/wheels/
    ../external-repositories/dt4acc /build/
    # locally perbuilts: gtpsa-cpp and thor-scsi
    ../local/* /twin/

%post
    # number of build jobs: preset for for a moderate machine
    # N_JOBS=48

    export DEBIAN_FRONTEND=noninteractive

    # installed before building packages: some packages are local and
    # need the token
    # so that secrets only need to be inserted once
    git config  --global credential.helper cache --timeout=36000
    pip cache dir
    # ls `pip cache dir`

    # setups ------------------------------------------------------------
    # put here so less surprise down after a long build time
    CMAKE_BUILD_DIR=build
    if [ -e  "$CMAKE_BUILD_DIR" ]
    then
       if [ ! -d "$CMAKE_BUILD_DIR" ]
       then
	    echo "build exists and is not a dir!"
       fi
    else
        mkdir $CMAKE_BUILD_DIR
    fi
    cd $CMAKE_BUILD_DIR
    CMAKE_BUILD_DIR=`pwd`
    echo "CMAKE_BUILD_DIR: $CMAKE_BUILD_DIR"

    # packages built here are installed to /twin
    # thor scsi needs to find gtpsa cmake config
    CMAKE_PREFIX_PATH=/twin/lib/cmake

    # add /twin/lib so that it will be used by ldconfig
    # do not forget to run ldconfig after everything has been
    # installed
    opt_conf_path=/etc/ld.so.conf.d/twin.conf
    echo '# parts built during process go here' >  $opt_conf_path
    echo '/twin/lib'                            >> $opt_conf_path
    echo '#EOF'                                 >> $opt_conf_path

    echo "ld config for opt"
    cat $opt_conf_path
    echo "Release local"
    cat $release_local

    # run ldconfig ... to check that it exists and works
    # don't need to find out after half an hour build
    /sbin/ldconfig

    # end setups ---------------------------------------------------------
    # update pip
    pip3 install --upgrade pip wheel

    # installing bact packages
    /bin/bash /build/snippets/bact_packages.sh

    # gtpsa-cpp and thor scsi ---------------------------------------------
    # c++ part copied from local
    pip3 install gtpsa thor_scsi --find-links file:///build/wheels --no-index

    # dt4acc --------------------------------------------------------------
    # echo 'building dt4acc--------------------------------------------------'
    cd dt4acc
    make -j $N_JOBS
    make -j $N_JOBS install
    cd ../
    echo 'building and install python packages done -----------------------'
    # echo 'end building dt4acc----------------------------------------------'
    # end dt4acc ----------------------------------------------------------

    echo 'cleaning build directories --------------------------------------'
    # epics pydevice thor scsi / gtpsa builds and installations done
    # here do clean up
    # but not yet .. need to see how epics is installed
    # rm -rf /$CMAKE_BUILD_DIR

    apt-get clean
    rm -rf /var/lib/apt/lists/*

    echo "---- pip list --- "
    pip3 list
    echo "---- pip list --- "
    echo "---- pip cache --- "
    pip3 cache info
    pip3 cache list
    echo "---- pip cache --- "

    echo 'remove pip cache '
    pip3 cache purge
    rm -rf /.cache
    rm -rf /build/wheels
    rm -rf /build/thor-scsi
    rm -rf /build/gtpsa-cpp

    # find / -type f > /var/log/files.txt || echo 'done'
    # chmod 666 /var/log/files.txt
    echo 'cleaning build directories done ------------------------------------'

    /sbin/ldconfig

%runscript
    (cd /build/dt4acc/iocBoot/iocvaccel && ./st.cmd)