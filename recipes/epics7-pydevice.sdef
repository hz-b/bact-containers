#
# Author:
#         Pierre Begemotowitsch     <pierre.schnizer@helmholtz-berlin.de>
#         Wahedullah Sulaiman Khail <Wahedullah.Sulaiman_Khail@helmholtz-berlin.de>
#         Markus Ries               <markus.ries@helmholtz-berlin.de>
#         Teresia Olsson            <teresia.olsson@helmholtz-berlin.de>
#
# Container containing the core components of the digital twin

Bootstrap: docker
From: ubuntu:22.04

%files
    ../external-repositories/epics-base/bin/linux-x86_64/ /opt/epics/bin/
    ../external-repositories/epics-base/lib/linux-x86_64/ /opt/epics/lib/

%post
    # number of build jobs: preset for for a moderate machine
    # N_JOBS=48

    export DEBIAN_FRONTEND=noninteractive
    apt-get -q=2 update

    apt-get -q=2 install -y --no-install-recommends \
       libreadline8 \
       less \
       file \
       bash \


    # only required for docker not for singularity
    ## # For epics usage
    ## # EXPOSE 5064/tcp
    ## # EXPOSE 5065/tcp
    ## # EXPOSE 5064/udp
    ## #EXPOSE 5065/udp

    # setups ------------------------------------------------------------
    # put here so less surprise down after a long build time

    # add /opt/lib so that it will be used by ldconfig
    # do not forget to run ldconfig after everything has been
    # installed
    opt_conf_path=/etc/ld.so.conf.d/opt.conf
    echo '# parts built during process go here' >  $opt_conf_path
    echo '/opt/lib'                             >> $opt_conf_path
    echo '/opt/epics/lib'                       >> $opt_conf_path
    echo '#EOF'                                 >> $opt_conf_path

    # let epics know where it finds the stuff ...
    release_local=RELEASE.local
    echo "# Release.local ... reflecting twin " >  $release_local
    echo "HOME_DEVEL=$CMAKE_BUILD_DIR"          >> $release_local
    echo 'EPICS_BASE=$(HOME_DEVEL)/epics-base'  >> $release_local
    echo 'PYDEVICE=$(HOME_DEVEL)/PyDevice'      >> $release_local
    echo '#EOF'                                 >> $release_local

    echo "ld config for opt"
    cat $opt_conf_path
    echo "Release local"
    cat $release_local

    # end setups ---------------------------------------------------------

    export DEBIAN_FRONTEND=noninteractive


    # run ldconfig ... to check that it exists and works
    # don't need to find out after half an hour build
    /sbin/ldconfig


    echo 'cleaning build directories --------------------------------------'
    # epics pydevice thor scsi / gtpsa builds and installations done
    # here do clean up
    # but not yet .. need to see how epics is installed
    # rm -rf /$CMAKE_BUILD_DIR

    echo '### remove apt-get cache ###'
    apt-get clean
    rm -rf /var/lib/apt/lists/*

    echo '### remove pip cache ###'
    rm -rf /.cache

    # find / -type f > /var/log/files.txt || echo 'done'
    # chmod 666 /var/log/files.txt
    echo 'cleaning build directories done ------------------------------------'

    /sbin/ldconfig

%runscript
    exec /bin/bash "$@"
