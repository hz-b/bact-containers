#
# Author:
#         Pierre Begemotowitsch     <pierre.schnizer@helmholtz-berlin.de>
#         Wahedullah Sulaiman Khail <Wahedullah.Sulaiman_Khail@helmholtz-berlin.de>
#
# Container containing python bact modules
#
# seems I need venv
# * qt needs binding mounts (can I include them here ?)
# * but live table stops to work if pip does not install
#   in venv ...
# * using %environment to switch it on by default
#
Bootstrap: localimage
From: ../bin/python-container.sif


# copy local built wheels into the images
%files
    snippets/*.sh /build/snippets/
    ../wheels/*.whl /build/wheels/
    ../wheels/*.tar.gz /build/wheels/


%environment
    /.singularity.d/env/99-zz_custom_env.sh


%post
    # ------------------------------------------------------------------------------

    apt-get -q=2 update
    # tzdata ... reducing number of local mounts
    apt-get -q=2 install -y --no-install-recommends \
       git \

    # defining directories
    # Where to put apps to
    APPS_DIR=/twin/apps/
    CODE_DIR=/twin/code/
    mkdir -p "$APPS_DIR"
    mkdir -p "$CODE_DIR"

    #  ---------------------------------------------------------

    python3 -m venv /twin/bact-venv/
    . /twin/bact-venv/bin/activate

    python3 -m pip install --upgrade pip wheel

    # installing conda packages required further down the line
    python3 -m pip install -q --find-links file:///build/wheels --no-index \
              pymongo numpy scipy typing pandas matplotlib \
              xarray h5netcdf \
	      pyvista ophyd bluesky databroker
    # ------------------------------------------------------------------------------
    #		     PyQt5 PySide2 fastapi uvicorn
    # packages required for python packages
    apt-get install -y --no-install-recommends \
	libprotobuf23

    # setup pip

    # Inspect cache: report later what is used
    # could be copied in on install
    echo '----------------------------------------------------------------------'
    echo pip3 cache
    # pip3 cache list
    echo '----------------------------------------------------------------------'
    # install dedicated python packages
    cd "$CODE_DIR"
    /bin/bash /build/snippets/bact_packages.sh

    CUSTOM_ENV='/.singularity.d/env/99-zz_custom_env.sh'
    # avoid that file metadata persist
    cat /build/snippets/bact_container_custom_env.sh > "$CUSTOM_ENV"
    chmod 755 "$CUSTOM_ENV"

    # to be moved to requirements ---------------------------------------
    # scipy: bact-math-utils
    # h5netcdf: bact-analysis-bessyii
    # : bessyii-dashboard

    # environemt start  ------------------------------------------------------

    cat >$CUSTOM_ENV <<EOF
#!/bin/bash
. /twin/bact-venv/bin/activate
PS1='bact \w > '
export PATH=/twin/bact-venv/bin/:/twin/epics/bin/:/bin:/usr/bin/:/usr/local/bin/
EOF

    CUSTOM_BASH='/.singularity_bash'
cat >$CUSTOM_BASH<<EOF
export PATH=/twin/bact-venv/bin/:/twin/epics/bin:/usr/bin/:/usr/local/bin/
EOF

    chmod 755 "$CUSTOM_ENV"
    chmod 755 "$CUSTOM_BASH"

    echo '# use custom PS1 '                          >> /etc/bash.bashrc
    echo '. /.singularity.d/env/99-zz_custom_env.sh'  >> /etc/bash.bashrc
    echo '# end custom PS1 '                          >> /etc/bash.bashrc



    # cleaning up  ------------------------------------------------------
    cd $TOP_DIR
    echo '----------------------------------------------------------------------'
    echo 'pip3 cache (after installing)'
    pip3 cache list
    echo '----------------------------------------------------------------------'
    pip3 cache purge
    # left over files
    find /twin/code -name '__pycache__' -delete
    apt-get purge -y git
    apt-get autoremove -y
    apt-get clean
    rm -rf /.cache
    rm -rf /root/.cache
    rm -rf /build/wheels
    rm -rf /build/downloads

    apt-get autoremove -y
    apt-get clean
    rm -rf /var/lib/apt/lists/*


%test
   modules=""
   for module in bact-device-models bact-math-utils bact-analysis bact-mls-ophyd
   do
	modules="$modules /twin/code/$module"
   done
   /twin/bact-venv/bin/python3 -m pytest $modules

%runscript
    exec python3 "$@"
